import socket, select
# user class
class User:
    userIDPW='';
    loginstate=0;
    chatrnum=0;
    useraddr = None;
    def setaddr(self, t_addr):
        self.useraddr = t_addr;
    def login(self,redata,tt_addr):
	if self.userIDPW==redata:
		self.loginstate=1;
		self.setaddr(tt_addr);
		return 1;
	else:
		self.loginstate=0;
		return 0;
    def __init__(self, IDPW = None):
	    self.userIDPW = IDPW;
class ChattingRoom:
    chating_user_list=[];
    chatrnum=0;
    def __init__(self, num = None):
	    self.chatrnum = num;

#유저생성
i = 0;
user_list = []
chatroom_list = []
user_list.append(User('ID:user1;PW:12;'))
user_list.append(User('ID:user2;PW:34;'))
user_list.append(User('ID:user3;PW:56;'))
user_list.append(User('ID:user4;PW:78;'))

# Tcp Chat server
#Function to broadcast chat messages to all connected clients
@@ -76,14 +87,25 @@ if __name__ == "__main__":
                    data = sock.recv(RECV_BUFFER)
                    if data:
                        #login
                        if (data[0]=='I') and (data[1]=='D') and (data[2]==':'):
                            j = False
                            for temp in user_list:
                                if(temp.login(data,addr)==1):
                                    j = True
                                    sock.send('LG:SUCCESS;')
                                    break;
                            if (j == False):
                                sock.send('LG:FAIL;')
                        #create_chattingroom
                        else if (data[0]=='C')and(data[1]=='C')and(data[2]==':'):
                            i++
                            chatroom_list.append(ChattingRoom(i))
                            for temp in user_list:
                                if(temp.useraddr == addr):
                                    user_temp = temp
                            user_temp.chatrnum = i
                            temp_data = ''
                            for ap in range(3,len(data)-1):
                                temp_data[ap-3] = data[ap]
                            for ap in range(1,int(temp_data)):
                                data = sock.recv(RECV_BUFFER)
                                for bp in range(3,len(data)-1):
                                    temp_data[bp-3] = data[bp]
                                    for users in user_list:
				                        if users.userIDPW == temp_data:
                                            chatroom_list[i-1].chating_user_list.append(temp_data)
                                            break
                            
                                        
                                
                        else if (data[0]=='M')and(data[1]=='S')and(data[2]==':'):
                        else if (data[0]=='O')and(data[1]=='U')and(data[2]=='T'):
                            for temp in user_list:
                                if(temp.useraddr == addr):
                                    user_temp = temp
                        else if (data[0]=='L')and(data[1]=='G')and(data[2]==':'):
                        broadcast_data(sock, "\r" + '<' + str(sock.getpeername()) + '> ' + data)               
                 
                except:

