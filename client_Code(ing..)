# -*- coding: utf8 -*-
 
# socket 모듈을 임포트
from socket import *
import sys
 
 
# 호스트, 포트와 버퍼 사이즈를 지정
HOST = '127.0.0.1'
PORT = 56789
BUFSIZE = 1024
ADDR = (HOST, PORT)
sel = 0
 
# 소켓 객체를 만들고
#while sel ==0:
    clientSocket = socket(AF_INET, SOCK_STREAM)
     
    # 로그인  시도
    while sel ==0:  # 위에 인지 여기인지ㅜㅜㅜ
        try:
            while(len(id_)>32 or len(password_)>32):
                print'id와 password를 입력하시오(길이제한 각각32byte) : '
                id_ = sys.stdin.readline()
                password_ = sys.stdin.readline()
            lgstr = 'ID:'+id_+';'+'PW:'+pw_+';'
            clientSocket.connect(ADDR)
            clientSocket.send(lgstr)
            res=clientSocket.recv(100)
            if res == 'LG:SUCCESS;':
                print 'ok'
                sel = 1
            else:
                print 'LG:FAIL;'
                sel = 0
                clientSocket.close()
                print'wrong access. try again!'
                
        except Exception as e:                  #예외에 왜 걸리지;;?
            print('채팅 서버(%s:%s)에 연결 할 수 없습니다.' % ADDR)
            sys.exit()
        

print('채팅 서버(%s:%s)에 연결 되었습니다.' % ADDR)
     
def count_room():      #채팅목록 갯수 확인
    count = clientSocket.recv(30)
    if count:
        if (count[0]=='C')&&(count[1]=='H')&&(count[2]==':'):
            i=3
            while count[i] != ';':
                temp += (""+count[i])
                i++
            number = int(temp)
    for i in range(1,number+1):
        chatpeople[i] = clientSocket.recv(256)
        print i
        print chatpeople[i]
def select_room():      #채팅방 선택
    print '참가할 방의 번호를 입력하시오'
    sel = input()
    sel = 'CH:'+sel+';'
    clientSocket.send(sel)
    rev = clientSocket.recv(30)
    if rev = 'ok':
        i = 1
        data=[]
        temp = clientSocket.recv(1124)
        data.append(temp)
        while temp != 'last':
            temp = clientSocket.recv(1124)
            data.append(temp)
            i++
     else:
         print '그런 방없다...'
         return select_room()

def prompt():
    sys.stdout.write('<나>')
    sys.stdout.flush()
 
# 무한 루프를 시작
while True:
    try:
        connection_list = [sys.stdin, clientSocket]
 
        read_socket = connection_list
        write_socket = 10
        error_socket = 10
 
        for sock in read_socket:
            if sock == clientSocket:
                data = sock.recv(BUFSIZE)
                if not data:
                    print('채팅 서버(%s:%s)와의 연결이 끊어졌습니다.' % ADDR)
                    clientSocket.close()
                    sys.exit()
                else:
                    print('%s' % data)  # 메세지 시간은 서버 시간을 따른다
                    prompt()
            else:
                message = sys.stdin.readline()
                clientSocket.send(message)
                prompt()
    except KeyboardInterrupt:
        clientSocket.close()
        sys.exit()



""" data = sock.recv(RECV_BUFFER)
                     if data:
+                        if (data[0]=='I')&&(data[1]=='D')&&(data[2]==':'):
+                            if user1.login(data):
+                                sock.send("LG:SUCCESS;");
+                            else
+                                sock.send("LG:FAIL");
+                        else if (data[0]=='L')&&(data[1]=='G')&&(data[2]==':'):
+                            user1.login(data);
+                    
                         broadcast_data(sock, "\r" + '<' + str(sock.getpeername()) + '> ' + data)               
                  
                 except:"""
